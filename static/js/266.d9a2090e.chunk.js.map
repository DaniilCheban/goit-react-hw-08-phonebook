{"version":3,"file":"static/js/266.d9a2090e.chunk.js","mappings":"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","sources":["components/ContactsLIst/ContactsList.jsx","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/Contacts.jsx","store/contacts/selectors.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'store/contacts/operation';\nimport { getContacts, visibleContacts } from 'store/contacts/selectors';\n\nexport const ContactsList = () => {\n  const items = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => () => {\n    dispatch(deleteContact(id));\n  };\n\n  const arreyContactsFiltered = useSelector(visibleContacts);\n\n  return (\n    <ul className=\"list-group \">\n      {arreyContactsFiltered.map(({ id, name, number }) => (\n        <li className=\"list-group-item d-flex\" key={id}>\n          <div className=\"p-2\">\n            {name}: {number}\n          </div>\n          <button\n            id={id}\n            onClick={handleDeleteContact(id)}\n            type=\"button\"\n            className=\"btn btn-danger ms-auto\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n      {items.length === 0 && <h3>Phonebook is empty</h3>}\n    </ul>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilterValue } from 'store/contacts/contactsSlise';\nimport { getStatusFilter } from 'store/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getStatusFilter);\n  const handleChange = e => {\n    dispatch(getFilterValue(e.target.value));\n  };\n\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor=\"name\" className=\"form-label\">\n        Find contact by name\n      </label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        name=\"filter\"\n        onChange={handleChange}\n        value={filter}\n        required\n      />\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'store/contacts/operation';\nimport { getContacts } from 'store/contacts/selectors';\nimport Swal from 'sweetalert2';\n\nexport const FormAddContacts = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n  const cleanState = () => {\n    setName('');\n    setNumber('');\n  };\n  const handleAddContact = e => {\n    e.preventDefault();\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    const isContact = items.some(\n      obj =>\n        obj.name.trim().toLowerCase() === newContact.name.trim().toLowerCase()\n    );\n    if (isContact) {\n      Swal.fire({\n        title: newContact.name,\n        text: 'Is already in contacts!',\n        width: '20em',\n      });\n      cleanState();\n      return;\n    }\n    dispatch(addContact(newContact));\n    cleanState();\n  };\n  return (\n    <form onSubmit={handleAddContact}>\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name=\"name\"\n          id=\"name\"\n          onChange={e => handleChange(e)}\n          value={name}\n          required\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"number\" className=\"form-label\">\n          Number\n        </label>\n        <input\n          type=\"tel\"\n          className=\"form-control\"\n          name=\"number\"\n          id=\"number\"\n          value={number}\n          onChange={e => handleChange(e)}\n          required\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        <p className=\"m-0\">Add contact</p>\n      </button>\n    </form>\n  );\n};\n","import { ContactsList } from '../components/ContactsLIst/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { FormAddContacts } from 'components/Form/Form';\nimport React, { useEffect } from 'react';\nimport { getError } from 'store/contacts/selectors';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'store/contacts/operation';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <section className=\"contacts_list\">\n        <div className=\"container\">\n          <h1 className=\"h1 mt-2\">Phonebook</h1>\n          <FormAddContacts />\n          <h2 className=\"h2 mt-3\">Contacts</h2>\n          <Filter />\n          <ContactsList />\n\n          {error && <p className=\"text-danger mt-3\">{error}</p>}\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default Contacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contact.contacts.items;\n\nexport const getIsLoading = state => state.contact.contacts.isLoading;\n\nexport const getError = state => state.contact.contacts.error;\n\nexport const getStatusFilter = state => state.contact.filter;\n\nexport const visibleContacts = createSelector(\n  [getContacts, getStatusFilter],\n  (items, filter) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n"],"names":["ContactsList","items","useSelector","getContacts","dispatch","useDispatch","handleDeleteContact","id","deleteContact","arreyContactsFiltered","visibleContacts","_jsxs","className","children","map","_ref","name","number","_jsx","onClick","type","length","Filter","filter","getStatusFilter","htmlFor","onChange","e","getFilterValue","target","value","required","FormAddContacts","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","_e$target","cleanState","onSubmit","preventDefault","newContact","some","obj","trim","toLowerCase","Swal","title","text","width","addContact","error","getError","useEffect","fetchContacts","state","contact","contacts","getIsLoading","isLoading","createSelector","includes"],"sourceRoot":""}