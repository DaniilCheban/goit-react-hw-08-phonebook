{"version":3,"file":"static/js/432.3daa2554.chunk.js","mappings":"sNAoGA,UA9FqB,WACnB,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAWC,EAAAA,EAAAA,MA+BjB,OACEC,EAAAA,EAAAA,KAAA,QAAAC,UACED,EAAAA,EAAAA,KAAA,WAASE,UAAU,eAAcD,UAC/BD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kBAAiBD,UAC9BE,EAAAA,EAAAA,MAAA,QAAMC,SAjCO,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAU,CACdnB,KAAAA,EACAI,MAAAA,EACAI,SAAAA,GAGFE,GAASU,EAAAA,EAAAA,IAAOD,IACbE,SACAC,MAAK,WACJC,IAAAA,KAAU,CACRC,MAAO,wBACPC,KAAM,4BAEV,IACCC,OAAM,SAAAC,GACDA,EAAMC,UAAYD,EAAMC,SAASxB,MACnCmB,IAAAA,KAAU,CACRE,KAAK,UAADI,OAAYF,EAAMC,SAASxB,MAAK,mBAE7BuB,EAAMG,SACfP,IAAAA,KAAU,CACRE,KAAME,EAAMG,SAGlB,GACJ,EAMqCjB,SAAA,EAC3BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBD,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,WAAWjB,UAAU,aAAYD,SAAC,eAGjDD,EAAAA,EAAAA,KAAA,SACEoB,SAAU,SAAAf,GAAC,OAAIhB,EAAQgB,EAAEgB,OAAOC,MAAM,EACtCA,MAAOlC,EACPA,KAAK,OACLmC,KAAK,OACLrB,UAAU,eACVsB,GAAG,WACHC,UAAQ,QAGZtB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBD,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,aAAajB,UAAU,aAAYD,SAAC,mBAGnDD,EAAAA,EAAAA,KAAA,SACEoB,SAAU,SAAAf,GAAC,OAAIZ,EAASY,EAAEgB,OAAOC,MAAM,EACvCA,MAAO9B,EACPJ,KAAK,QACLmC,KAAK,QACLrB,UAAU,eACVsB,GAAG,aACHC,UAAQ,QAGZtB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBD,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,gBAAgBjB,UAAU,aAAYD,SAAC,cAGtDD,EAAAA,EAAAA,KAAA,SACEoB,SAAU,SAAAf,GAAC,OAAIR,EAAYQ,EAAEgB,OAAOC,MAAM,EAC1CA,MAAO1B,EACPR,KAAK,WACLmC,KAAK,WACLrB,UAAU,eACVsB,GAAG,gBACHE,UAAU,IACVD,UAAQ,QAGZzB,EAAAA,EAAAA,KAAA,UAAQuB,KAAK,SAASrB,UAAU,kBAAiBD,SAAC,qBAQ9D,C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { singUp } from 'store/auth/operation';\nimport Swal from 'sweetalert2';\n\nconst RegisterPage = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleSabmit = e => {\n    e.preventDefault();\n    const newUser = {\n      name,\n      email,\n      password,\n    };\n\n    dispatch(singUp(newUser))\n      .unwrap()\n      .then(() => {\n        Swal.fire({\n          title: 'Welcome in phonebook!',\n          text: 'User created successful!',\n        });\n      })\n      .catch(error => {\n        if (error.keyValue && error.keyValue.email) {\n          Swal.fire({\n            text: `Email: ${error.keyValue.email} already used`,\n          });\n        } else if (error.message) {\n          Swal.fire({\n            text: error.message,\n          });\n        }\n      });\n  };\n\n  return (\n    <main>\n      <section className=\"registration\">\n        <div className=\"container mt-4 \">\n          <form onSubmit={handleSabmit}>\n            <div className=\"mb-3\">\n              <label htmlFor=\"Username\" className=\"form-label\">\n                User name\n              </label>\n              <input\n                onChange={e => setName(e.target.value)}\n                value={name}\n                name=\"name\"\n                type=\"name\"\n                className=\"form-control\"\n                id=\"Username\"\n                required\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"InputEmail\" className=\"form-label\">\n                Email address\n              </label>\n              <input\n                onChange={e => setEmail(e.target.value)}\n                value={email}\n                name=\"email\"\n                type=\"email\"\n                className=\"form-control\"\n                id=\"InputEmail\"\n                required\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"InputPassword\" className=\"form-label\">\n                Password\n              </label>\n              <input\n                onChange={e => setPassword(e.target.value)}\n                value={password}\n                name=\"password\"\n                type=\"password\"\n                className=\"form-control\"\n                id=\"InputPassword\"\n                minLength=\"7\"\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Register\n            </button>\n          </form>\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","dispatch","useDispatch","_jsx","children","className","_jsxs","onSubmit","e","preventDefault","newUser","singUp","unwrap","then","Swal","title","text","catch","error","keyValue","concat","message","htmlFor","onChange","target","value","type","id","required","minLength"],"sourceRoot":""}