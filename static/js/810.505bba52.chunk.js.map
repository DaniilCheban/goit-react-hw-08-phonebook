{"version":3,"file":"static/js/810.505bba52.chunk.js","mappings":"gRA0BA,EApBiB,WACf,IAAMA,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,uBAAsBC,SAAA,CAAC,WAASP,EAAKQ,KAAKC,kBACvDC,EAAAA,EAAAA,KAAA,UAAQJ,UAAU,kBAAkBK,KAAK,SAASC,QAVjC,WACnBT,GAASU,EAAAA,EAAAA,OACNC,SACAC,OAAM,SAAAC,GACLC,IAAAA,KAAU,CAAEC,KAAMF,EAAMG,SAC1B,GACJ,EAI4EZ,SAAC,aAK/E,E,oBCjBaa,EAAgB,WAC3B,IAAMC,GAAapB,EAAAA,EAAAA,IAAYqB,EAAAA,IACzBC,GAAetB,EAAAA,EAAAA,IAAYuB,EAAAA,IAE3BC,GAAYxB,EAAAA,EAAAA,IAAYyB,EAAAA,IAC9B,OACEhB,EAAAA,EAAAA,KAAA,UAAQJ,UAAU,aAAYC,UAC5BG,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,mEAAkEC,UAC/EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAmBqB,GAAG,qBAAoBpB,SAAA,EACvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCG,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACtB,UAAU,YAAY,eAAa,OAAOuB,GAAG,IAAGtB,SAAC,SAGzDc,IACCX,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACtB,UAAU,WAAWuB,GAAG,YAAWtB,SAAC,iBAKjDG,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,aAAYC,SACxBc,GACCX,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAvB,UACEG,EAAAA,EAAAA,KAACqB,EAAQ,OAGX1B,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAAvB,SAAA,EACEG,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACtB,UAAU,WAAWuB,GAAG,YAAWtB,SAAC,kBAG7CG,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACtB,UAAU,WAAWuB,GAAG,SAAQtB,SAAC,mBAOhDgB,GAAgBE,KAAcf,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,UAKjD,ECrCA,MATA,WACE,OACE3B,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAAvB,SAAA,EACEG,EAAAA,EAAAA,KAACU,EAAa,KACdV,EAAAA,EAAAA,KAACuB,EAAAA,GAAM,MAGb,C,sKCRaC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,SAASC,KAAM,EAEpDZ,EAAe,SAAAS,GAAK,OAAIA,EAAMC,QAAQC,SAASZ,SAAU,EAEzDc,EAAW,SAAAJ,GAAK,OAAIA,EAAMC,QAAQC,SAASrB,KAAM,EAEjDwB,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,QAAQK,MAAO,EAEhDC,GAAkBC,EAAAA,EAAAA,IAC7B,CAACT,EAAaM,IACd,SAACF,EAAOG,GACN,OAAOH,EAAMG,QAAO,SAAAL,GAAO,OACzBA,EAAQ5B,KAAKoC,cAAcC,SAASJ,EAAOG,cAAc,GAE7D,G","sources":["components/UserMenu/UserMenu.jsx","components/NavigationBar/NavigationBar.jsx","components/Layout/Layout.jsx","store/contacts/selectors.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from 'store/auth/operation';\nimport { selectUser } from 'store/auth/selector';\nimport Swal from 'sweetalert2';\n\nconst UserMenu = () => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const handleLogOut = () => {\n    dispatch(logOut())\n      .unwrap()\n      .catch(error => {\n        Swal.fire({ text: error.message });\n      });\n  };\n  return (\n    <div className=\"d-flex align-items-center\">\n      <p className=\"me-3 mt-auto mb-auto\">Welcome {user.name.toUpperCase()}</p>\n      <button className=\"btn btn-warning\" type=\"button\" onClick={handleLogOut}>\n        Logout\n      </button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import Loader from 'components/Loader/Loader';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { selectisLoggedIn, selectisRefreshing } from 'store/auth/selector';\nimport { getIsLoading } from 'store/contacts/selectors';\n\nexport const NavigationBar = () => {\n  const isLoggedIn = useSelector(selectisLoggedIn);\n  const isRefreshing = useSelector(selectisRefreshing);\n\n  const isLoading = useSelector(getIsLoading);\n  return (\n    <header className=\"sticky-top\">\n      <nav className=\"container navbar navbar-expand-lg bg-body-tertiary border-bottom\">\n        <div className=\"container-fluid\">\n          <div className=\" navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav me-auto\">\n              <NavLink className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                Home\n              </NavLink>\n              {isLoggedIn && (\n                <NavLink className=\"nav-link\" to=\"/contacts\">\n                  Contacts\n                </NavLink>\n              )}\n            </div>\n            <div className=\"navbar-nav\">\n              {isLoggedIn ? (\n                <>\n                  <UserMenu />\n                </>\n              ) : (\n                <>\n                  <NavLink className=\"nav-link\" to=\"/register\">\n                    Registration\n                  </NavLink>\n                  <NavLink className=\"nav-link\" to=\"/login\">\n                    LogIn\n                  </NavLink>\n                </>\n              )}\n            </div>\n          </div>\n          {(isRefreshing || isLoading) && <Loader />}\n        </div>\n      </nav>\n    </header>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { NavigationBar } from '../NavigationBar/NavigationBar';\n\nfunction Layout() {\n  return (\n    <>\n      <NavigationBar />\n      <Outlet />\n    </>\n  );\n}\n\nexport default Layout;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contact.contacts.items;\n\nexport const getIsLoading = state => state.contact.contacts.isLoading;\n\nexport const getError = state => state.contact.contacts.error;\n\nexport const getStatusFilter = state => state.contact.filter;\n\nexport const visibleContacts = createSelector(\n  [getContacts, getStatusFilter],\n  (items, filter) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n"],"names":["user","useSelector","selectUser","dispatch","useDispatch","_jsxs","className","children","name","toUpperCase","_jsx","type","onClick","logOut","unwrap","catch","error","Swal","text","message","NavigationBar","isLoggedIn","selectisLoggedIn","isRefreshing","selectisRefreshing","isLoading","getIsLoading","id","NavLink","to","_Fragment","UserMenu","Loader","Outlet","getContacts","state","contact","contacts","items","getError","getStatusFilter","filter","visibleContacts","createSelector","toLowerCase","includes"],"sourceRoot":""}